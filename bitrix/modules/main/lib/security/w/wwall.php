<? namespace Bitrix\Main\Security\W;$GLOBALS['____776469462']= array(base64_decode('dGltZQ='.'='),base64_decode('d'.'GltZ'.'Q=='),base64_decode(''.'a'.'nNvbl'.'9kZW'.'N'.'vZ'.'GU'.'='),base64_decode('Y'.'XJyYXlfbW'.'Vy'.'Z2U='),base64_decode('a'.'m9'.'pb'.'g=='),base64_decode('am9'.'pbg=='),base64_decode(''.'am'.'9pb'.'g=='),base64_decode(''.'Y'.'XJyYXlf'.'c'.'G9w'),base64_decode('YXJ'.'yY'.'Xlf'.'c2hpZnQ'.'='),base64_decode('YXJyYXl'.'f'.'c2hpZnQ='),base64_decode('YXJyYXlfc2hpZ'.'nQ='),base64_decode('YXJy'.'YXlf'.'c2hpZn'.'Q='),base64_decode('YXJyYX'.'lfbWV'.'yZ'.'2U'.'='),base64_decode(''.'a'.'X'.'Nf'.'Y'.'XJyYXk='),base64_decode('YXJyYXlfb'.'WVy'.'Z2U='),base64_decode('aW'.'5fYXJyYX'.'k='),base64_decode('aW5fY'.'XJ'.'y'.'YXk='),base64_decode('aW5fYXJyYXk='),base64_decode('aW'.'5'.'fYXJ'.'yYXk'.'='),base64_decode('aW'.'5fYXJ'.'yYXk='),base64_decode('dGltZQ=='),base64_decode('d'.'Gl'.'tZQ=='),base64_decode('YXJyY'.'XlfbWFw'),base64_decode('anNvbl'.'9lbmN'.'vZG'.'U='),base64_decode('anNvb'.'l9lbmNvZGU='),base64_decode(''.'am9p'.'bg'.'=='));if(!function_exists(__NAMESPACE__.'\\___185447206')){function ___185447206($_1785367619){static $_1559036130= false; if($_1559036130 == false) $_1559036130=array(''.'V1dB'.'TE'.'xfTE9D'.'S'.'w==','c'.'2'.'Vj'.'dX'.'JpdH'.'k=','Y2FjaGU=',''.'dHRs','REF'.'UQQ='.'=','eyI=','V1dBTEx'.'f'.'T'.'E9DSw==',''.'c2VjdX'.'JpdH'.'k=',''.'U'.'0VDVVJJ'.'VFl'.'fV1dBTExfRVhDRVBU'.'S'.'U9O',''.'RkFJTF9DSEV'.'DS0lORw==','Q2FuIG5'.'vd'.'CBl'.'eGVjdXRlIHd3'.'YWxsIHJ1bGV'.'zOiA=','IFRyYWNlOi'.'A'.'=','Uk'.'VRVUVTVF9VUkk=','a2V'.'5'.'cw'.'==','dmFsdWVz',''.'U0VDVVJJ'.'VFlf'.'V1dBTExfTU9ES'.'UZ'.'Z','Lg='.'=',''.'U0V'.'D'.'VVJJVFl'.'fV1dBTExfVU5TRVQ'.'=','L'.'g'.'='.'=','U'.'0VDVV'.'JJ'.'V'.'FlfV1'.'dBTEx'.'f'.'RVh'.'JV'.'A'.'==','Lg='.'=','Z2xv'.'YmFs',''.'a2V5cw='.'=','d'.'mFsdWVz','Z2V0','Z'.'2V0','c'.'G'.'9z'.'dA==','cG9zdA==','Y29va2'.'ll','Y29va2ll','c'.'mVxdW'.'V'.'zdA'.'='.'=',''.'cmVxdWVz'.'d'.'A==','Z2xvYm'.'Fs',''.'Z2x'.'vYmFs','bWF'.'pb'.'l'.'9z'.'ZW'.'M=','V1d'.'BTE'.'xfQ'.'UNUV'.'U'.'FMSVpFX1JVTEVT','dg==','dm'.'Vy'.'c2lvbg='.'=','aQ==',''.'aXN'.'JbnN0YWx'.'s'.'ZWQ=','c29ja2V0VGltZW'.'91dA==','c3Ry'.'ZW'.'FtVGltZW91'.'dA==',''.'KC'.'c=',''.'ZGF0YQ==',''.'J'.'ywg'.'Jw='.'=','bW9kdWxl','Jyw'.'g'.'Jw='.'=',''.'bW9kdW'.'xl'.'X'.'3Zlc'.'nN'.'pb2'.'4'.'=','Jyk=','LCA=','U0VDVVJJVFlf'.'V1dBTExf'.'RVhDR'.'VBUSU9O','b'.'WF'.'p'.'b'.'g==','RkF'.'JT'.'F9'.'SRUZSRVNISU5H','Q2'.'F'.'uIG'.'5v'.'dC'.'ByZ'.'WZ'.'yZXNoIH'.'d3'.'YWxsIHJ1bG'.'VzOi'.'A=',''.'IFRyYWNlOiA=',''.'ZGF0YQ'.'==','ey'.'I=','LS0tLS1CRU'.'dJTi'.'BQVUJ'.'MS'.'UM'.'gS0V'.'Z'.'LS'.'0tLS0=','C'.'k1JS'.'U'.'JJ'.'akFOQm'.'drc'.'W'.'h'.'raUc'.'5dz'.'B'.'CQVFFRkFBT0NBUT'.'hB'.'TUlJQ'.'kN'.'nS0NBU'.'UVBc'.'ThR'.'R'.'TB'.'Iam1ISlVTdFdWNm4wemEKUlZv'.'THgwMkt6'.'YmZy'.'YlMvU'.'DZzV2F4'.'V'.'Hp'.'3OFNlR'.'1R0Yl'.'RDT3Jw'.'SGk1UUY2T'.'1J5alovWHh6L'.'0'.'tMV'.'TFHYm9m'.'O'.'UNaMwo0ej'.'d'.'Ta'.'3FVdDY'.'2aWJYdk9'.'GQng0'.'Z'.'ncvQVB'.'QUkdEc'.'XRtMG5EM2ZnR3N'.'1M'.'1JlUGd3Mjlp'.'OCt2'.'bTdtdEJLSlV'.'ZbDRy'.'ClZwYjZzZl'.'pFVD'.'lLRWI2VDF'.'IRF'.'ltRXZjM'.'WhxL2lpdXl4THJaW'.'mk1'.'U'.'TZVZmY0VUV'.'2VEkrNj'.'hz'.'c0ZS'.'a1Erb3dU'.'UnkKZ'.'U'.'9JTWJGaE0'.'vVVRtZ'.'l'.'Z'.'ZYl'.'RSR'.'nkyb1'.'VROF'.'dNemEybko1'.'U'.'2F'.'oemk'.'xVU'.'tPMWpBa'.'lhU'.'UFJyemM3QWp1NjM5ajFPM'.'A'.'p'.'wcH'.'Fm'.'bTV4Z1ds'.'RkFK'.'a'.'0hRVG'.'diZGQ1'.'QVdxREZRa3Q5S'.'EtrWStUbmZCTE'.'dWTXZWeVB'.'3VEhOV1'.'FZQXc0eHBnL'.'3dBC'.'lp3'.'SURBUUF'.'CC'.'i0tLS0tR'.'U5EI'.'F'.'BV'.'Q'.'kxJQ'.'y'.'B'.'LRVktLS0tLQ='.'=');return base64_decode($_1559036130[$_1785367619]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_704700218= 'https://wwall.bitrix.info/rules.php'; protected $_285827934= true; public function handle(){ try{  $_1363983322= Cache::createInstance(); $_1988099210= false; if($_1363983322->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_173620938= $_1363983322->getVars(); if($GLOBALS['____776469462'][0]()- $_173620938> round(0+6.6666666666667+6.6666666666667+6.6666666666667)){  $_1976607908= Application::getConnection(); $_558526332= RuleRecordTable::getTableName(); $_1976607908->truncateTable($_558526332); RuleRecordTable::cleanCache(); $_1363983322->clean(___185447206(0), ___185447206(1));}} elseif($_1363983322->startDataCache()){  $_1363983322->endDataCache($GLOBALS['____776469462'][1]()); $_1988099210= true;}  $_2104886566= RuleRecordTable::getList([ ___185447206(2) =>[___185447206(3) => round(0+3600)* round(0+24)* round(0+2.3333333333333+2.3333333333333+2.3333333333333)]])->fetchAll(); foreach($_2104886566 as $_761638446){ $_105220069= new PublicKeyCipher; $_2064229871= $_105220069->decrypt($_761638446[___185447206(4)], static::__2033522638()); if(!str_starts_with($_2064229871, ___185447206(5))){ continue;} $_1460372518= $GLOBALS['____776469462'][2]($_2064229871, true); if(!empty($_1460372518)){ $_662622655= Rule::make($_1460372518); $_1484472723= $this->handleRule($_662622655); $this->applyHandlingResults($_1484472723);}}  if($_1988099210){ $_1363983322->clean(___185447206(6), ___185447206(7));}} catch(\Throwable $_542556855){ $this->logEvent( ___185447206(8), ___185447206(9), ___185447206(10). $_542556855->getMessage(). ___185447206(11). $_542556855->getTraceAsString());}}  public function handleRule(Rule $_662622655): array{ $_1484472723=[]; if($_662622655->matchPath($_SERVER[___185447206(12)])){  $_1988054476= $this->getContextElements($_662622655->getContext()); foreach($_1988054476 as $_1477723313 => &$_637470790){ $_1484472723= $GLOBALS['____776469462'][3]($_1484472723, $this->recursiveContextKeyHandle($_1477723313, $_637470790,[], $_662622655));}} return $_1484472723;}  public function applyHandlingResults(array $_1484472723){ $_1988054476= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1484472723 as $_720995386){ $_637470790=& $_1988054476[$_720995386->getContextName()]; $_752521910= $_720995386->getRuleResult(); $_662622655= $_720995386->getRule(); if($_752521910 instanceof ModifyResult){ if($_662622655->getProcess() === ___185447206(13)){  static::rewriteContextKey( $_720995386->getContextName(), $_637470790, $_720995386->getContextKey(), $_752521910->getCleanValue());} elseif($_662622655->getProcess() === ___185447206(14)){ static::rewriteContextValue( $_720995386->getContextName(), $_637470790, $_720995386->getContextKey(), $_752521910->getCleanValue());} $this->logEvent( ___185447206(15), $_720995386->getContextName(), $GLOBALS['____776469462'][4](___185447206(16), $_720995386->getContextKey()));} elseif($_752521910 instanceof CheckResult &&!$_752521910->isSuccess()){ if($_752521910->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_720995386->getContextName(), $_637470790, $_720995386->getContextKey(),); $this->logEvent( ___185447206(17), $_720995386->getContextName(), $GLOBALS['____776469462'][5](___185447206(18), $_720995386->getContextKey()));} elseif($_752521910->getAction() === RuleAction::EXIT){ $this->logEvent( ___185447206(19), $_720995386->getContextName(), $GLOBALS['____776469462'][6](___185447206(20), $_720995386->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_285827934= false;} protected function rewriteContextKey($_1477723313, &$_637470790, $_1953053465, $_1556554233){ $_1427275598= $_1953053465;  $GLOBALS['____776469462'][7]($_1427275598); $_1427275598[]= $_1556554233; if($_1477723313 === ___185447206(21)){ $_894585869= $GLOBALS['____776469462'][8]($_1953053465); $GLOBALS['____776469462'][9]($_1427275598); if(empty($_1953053465)){ $GLOBALS[$_1556554233]= $GLOBALS[$_894585869]; unset($GLOBALS[$_894585869]);} else{ $_637470790=& $GLOBALS[$_894585869]; $_1528742391= ArrayHelper::getByNestedKey($_637470790, $_1953053465);  ArrayHelper::setByNestedKey($_637470790, $_1427275598, $_1528742391);  ArrayHelper::unsetByNestedKey($_637470790, $_1953053465);}} else{ $_1528742391= ArrayHelper::getByNestedKey($_637470790, $_1953053465);  ArrayHelper::setByNestedKey($_637470790, $_1427275598, $_1528742391);  ArrayHelper::unsetByNestedKey($_637470790, $_1953053465);}} protected function rewriteContextValue($_1477723313, &$_637470790, $_1549880238, $_1528742391){ if($_1477723313 === 'global'){ $_894585869= $GLOBALS['____776469462'][10]($_1549880238); if(empty($_1549880238)){ $GLOBALS[$_894585869]= $_1528742391;} else{ $_637470790=& $GLOBALS[$_894585869]; ArrayHelper::setByNestedKey($_637470790, $_1549880238, $_1528742391);}} else{  ArrayHelper::setByNestedKey($_637470790, $_1549880238, $_1528742391);}} protected function unsetContextValue($_1477723313, &$_637470790, $_1549880238){ if($_1477723313 === 'global'){ $_894585869= $GLOBALS['____776469462'][11]($_1549880238); if(empty($_1549880238)){ unset($GLOBALS[$_894585869]);} else{ $_637470790=& $GLOBALS[$_894585869]; ArrayHelper::unsetByNestedKey($_637470790, $_1549880238);}} else{ ArrayHelper::unsetByNestedKey($_637470790, $_1549880238);}}  protected function recursiveContextKeyHandle(string $_1477723313, array &$_637470790, array $_319548434, Rule $_662622655): array{  $_1484472723=[]; foreach($_637470790 as $_1932652278 => $_1528742391){ $_1549880238= $GLOBALS['____776469462'][12]($_319548434,[$_1932652278]); if($_662622655->matchKey($_1549880238)){  if($_662622655->getProcess() === ___185447206(22)){ $_752521910= $_662622655->evaluate($_1932652278);} elseif($_662622655->getProcess() === ___185447206(23)){ $_752521910= $_662622655->evaluateValue($_1528742391);}  if(!empty($_752521910) && $_752521910 instanceof RuleResult){ $_1484472723[]= new HandlingResult($_1477723313, $_1549880238, $_752521910, $_662622655);}}  if($GLOBALS['____776469462'][13]($_1528742391)){ $_1484472723= $GLOBALS['____776469462'][14]($_1484472723, $this->recursiveContextKeyHandle( $_1477723313, $_637470790[$_1932652278], $_1549880238, $_662622655));}} return $_1484472723;} protected function getContextElements(array $_1518667406){ $_1033694752=[]; if($GLOBALS['____776469462'][15](___185447206(24), $_1518667406, true)){ $_1033694752[___185447206(25)]= &$_GET;} if($GLOBALS['____776469462'][16](___185447206(26), $_1518667406, true)){ $_1033694752[___185447206(27)]= &$_POST;} if($GLOBALS['____776469462'][17](___185447206(28), $_1518667406, true)){ $_1033694752[___185447206(29)]= &$_COOKIE;} if($GLOBALS['____776469462'][18](___185447206(30), $_1518667406, true)){ $_1033694752[___185447206(31)]= &$_REQUEST;} if($GLOBALS['____776469462'][19](___185447206(32), $_1518667406, true)){ $_1033694752[___185447206(33)]= $GLOBALS;} return $_1033694752;} public static function refreshRules(){ try{ $_1668413690= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____776469462'][20]()- $_1668413690)< static::CACHE_RULES_TTL){ return;} Option::set(___185447206(34), ___185447206(35), $GLOBALS['____776469462'][21]()); $_634769691= null;  $_554742043= $GLOBALS['____776469462'][22](function($_102959942){ return[___185447206(36) => $_102959942[___185447206(37)], ___185447206(38) => (int) $_102959942[___185447206(39)]];}, ModuleManager::getModulesFromDisk());  $_1238563434= new HttpClient([ ___185447206(40) => round(0+2.5+2.5), ___185447206(41) => round(0+1.6666666666667+1.6666666666667+1.6666666666667)]); $_1855865415= $_1238563434->post( static::$_704700218,[ 'modules' => $GLOBALS['____776469462'][23]($_554742043), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_1238563434->getStatus() == round(0+40+40+40+40+40) &&!empty($_1855865415)){ $_634769691= Json::decode($_1855865415);}  if($_634769691 !== null){ $_1976607908= Application::getConnection(); $_558526332= RuleRecordTable::getTableName(); if(!empty($_634769691)){ foreach($_634769691 as $_826376351){ if(!static::checkRuleSign($_826376351)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____776469462'][24]($_826376351));}}}  $_1976607908->truncateTable($_558526332);  if(!empty($_634769691)){ $_842338956=[]; foreach($_634769691 as $_826376351){ $_842338956[]= ___185447206(42). $_1976607908->getSqlHelper()->forSql($_826376351[___185447206(43)]). ___185447206(44). $_1976607908->getSqlHelper()->forSql($_826376351[___185447206(45)]). ___185447206(46). $_1976607908->getSqlHelper()->forSql($_826376351[___185447206(47)]). ___185447206(48);} $_1104343074= $GLOBALS['____776469462'][25](___185447206(49), $_842338956);  $_1976607908->query("INSERT INTO {$_558526332} (DATA, MODULE, MODULE_VERSION) VALUES {$_1104343074}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_542556855){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___185447206(50), ___185447206(51), ___185447206(52), ___185447206(53). $_542556855->getMessage(). ___185447206(54). $_542556855->getTraceAsString());}} protected static function checkRuleSign($_662622655){ $_105220069= new PublicKeyCipher; $_1460372518= $_105220069->decrypt($_662622655[___185447206(55)], static::__2033522638()); return str_starts_with($_1460372518, ___185447206(56));} private static function __2033522638(){ $_1092633972= ''; $_1092633972 .= ___185447206(57); $_1092633972 .= ___185447206(58); return $_1092633972;} protected function logEvent($_216660272, $_1545368642, $_225634447){ if($this->_285827934){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_216660272, 'main', $_1545368642, $_225634447);}}}?>